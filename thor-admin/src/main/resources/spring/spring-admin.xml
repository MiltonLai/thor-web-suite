<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:mvc="http://www.springframework.org/schema/mvc"
		xmlns:context="http://www.springframework.org/schema/context"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<!-- Inject DefaultAnnotationHandlerMapping and AnnotationMethodHandlerAdapter -->
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=utf-8</value>
						<value>application/json;charset=utf-8</value>
					</list>
				</property>
				<property name="writeAcceptCharset" value="false" />
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<!-- Turn off working out content type based on URL file extension, should fall back to looking at the Accept headers -->
		<!-- Disabled path extension. Note that favor does not mean use one approach in preference to another, it just enables
		or disables it. The order of checking is always path extension, parameter, Accept header -->
		<property name="favorPathExtension" value="false" />
		<!-- Enable the use of the URL parameter -->
		<property name="favorParameter" value="true" />
		<!-- Don't use the JAF, instead specify the media type mappings manually - we only wish to support JSON and XML -->
		<property name="useJaf" value="false"/>
		<property name="defaultContentType" value="text/html" />
		<property name="mediaTypes" >
			<value>
				html=text/html
				json=application/json
				xml=application/xml
			</value>
		</property>
	</bean>

	<mvc:interceptors>
		<bean class="com.rockbb.thor.admin.web.interceptor.GlobalInterceptor" />
		<bean class="com.rockbb.thor.admin.web.interceptor.SessionInterceptor" />
		<bean class="com.rockbb.thor.admin.web.interceptor.PageInterceptor" />
		<bean class="com.rockbb.thor.admin.web.interceptor.AuthInterceptor" />
	</mvc:interceptors>

	<!-- where to scan the annotated beans, inject the following beans
		AutowiredAnnotationBeanPostProcessor: @Autowired,
		CommonAnnotationBeanPostProcessor: @Resource, @PostConstruct, @PreDestroy. -->
	<context:component-scan base-package="com.rockbb.thor.admin.web.controller, com.rockbb.thor.admin.adapter" />

	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">

		<property name="contentNegotiationManager" ref="contentNegotiationManager" />
		<property name="viewResolvers">
			<list>
				<bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
					<property name="cache" value="true" />
					<property name="prefix" value="" />
					<property name="suffix" value=".ftl" />
					<property name="contentType" value="text/html;charset=UTF-8" />
				</bean>
			</list>
		</property>

		<property name="defaultViews">
			<list>
			</list>
		</property>

	</bean>

	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/classes/template/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
				<prop key="number_format">#</prop>
				<prop key="classic_compatible">true</prop>
				<prop key="template_exception_handler">ignore</prop>
				<prop key="auto_import">spring.ftl as S</prop>
			</props>
		</property>
	</bean>

	<bean id="messageSource" class="com.rockbb.thor.admin.common.ExposedResourceBundleMessageSource">
		<property name="basenames">
			<list><value>language/message</value></list>
		</property>
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="26214400"/>
	</bean>

	<!-- Cache Entity -->
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean>
	<bean id="cacheFactory" class="com.rockbb.thor.commons.lib.cache.CacheFactory">
		<constructor-arg ref="ehCacheManager" />
	</bean>

	<bean id="propertyConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:application.properties</value>
			</list>
		</property>
	</bean>

	<import resource="classpath:spring/spring-admin-dubbo.xml" />

</beans>